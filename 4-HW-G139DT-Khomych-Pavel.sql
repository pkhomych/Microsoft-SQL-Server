-- Внимание! Во всех результирующих выборках должны быть учтены все записи, даже
-- те, которые содержат NULL поля, однако, склейка не должна быть NULL записью!
-- Для этого используйте либо CASE, либо функцию 
-- ISNULL(<выражение>, <значение по умолчанию>) -- Microsoft SQL Server
-- IFNULL(<выражение>, <значение по умолчанию>) -- MySQL
-- nvl(<выражение>, <значение по умолчанию>) --Oracle COALESCE(<выражение>, <значение по умолчанию>) -- ANSI SQL (стандарт)
-- Соблюдать это условие достаточно для двух полей BIRTHDAY и UNIV_ID.
-- В качестве <значения по умолчания> используйте строку 'unknown'.

 use QALight

-- 1. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала один столбец типа varchar, содержащий последовательность разделенных 
--    символом ';' (точка с запятой) значений столбцов этой таблицы, и при этом 
--    текстовые значения должны отображаться прописными символами (верхний регистр), 
--    то есть быть представленными в следующем виде: 
--    1;КАБАНОВ;ВИТАЛИЙ;M;550;4;ХАРЬКОВ;01/12/1990;2.
--    ...
--    примечание: в выборку должны попасть студенты из любого города из 5 букв

select upper (cast(id as varchar) + ';' + surname + ';' + name + ';' + gender + ';' + 
              cast(stipend as varchar) + ';' + 
		      cast(course as varchar) + ';' + city + ';' + 
       isnull(convert(varchar,birthday, 101), 'unknown') + ';' + 
	   isnull(cast(UNIV_ID as varchar), 'unknown')) 'Exercise 1'
  from STUDENTS
 where len (city)=5;

-- 2. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде: 
--    В.КАБАНОВ;местожительства-ХАРЬКОВ;родился-01.12.90
--    ...
--    примечание: в выборку должны попасть студенты, фамилия которых содержит вторую
--    букву 'е' и предпоследнюю букву 'и', либо же фамилия заканчивается на 'ц'

select upper(left(name, 1)+'.'+surname)+';'+'местожительства-'+
	   upper(city)+';'+'родился-'+
       isnull(convert(varchar,birthday,4),'unknown') 'Exercise 2'
  from STUDENTS
 where surname like '_е%и_' or surname like '%ц';

-- 3. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    т.цилюрик;местожительства-Херсон; учится на IV курсе
--    ...
--    примечание: курс указать римскими цифрами (воспользуйтесь CASE), 
--    отобрать студентов, стипендия которых кратна 200

select  lower(left(name, 1))+'.'+lower(surname)+';'+'местожительства-'+City+'; '+'учится на '+
       case course
		when 1 then 'I'
		when 2 then 'II'
		when 3 then 'III'
		when 4 then 'IV'
		when 5 then 'V' 
		else ''
		end +' курсе' information
  from STUDENTS
 where stipend%200=0;
      
-- 4. Составьте запрос для таблицы STUDENT таким образом, чтобы выборка 
--    содержала столбец в следующем виде:
--     Нина Федосеева из г.Днепропетровск родилась в 1992 году
--     ...
--     Дмитрий Коваленко из г.Хмельницкий родился в 1993 году
--     ...
--     примечание: для всех городов, в которых более 8 букв

select name+' '+surname+' из г.'+city+case gender 
                                        when 'f' then ' родилась в'
		                                when 'm' then ' родился в'
                                        else ' '
                                      end+' '+format(birthday,'yyyy')+' году'
  from STUDENTS
 where len(city)>8;

-- 5. Вывести фамилии, имена студентов и величину получаемых ими стипендий, 
--    при этом значения стипендий первокурсников должны быть увеличены на 17.5%

select surname, name, stipend, course, 
       case 
	     when course=1 then cast(STIPEND+(stipend*0.175) as numeric(10,2))
         else STIPEND 
	   end 'new stipend'
  from STUDENTS s; 

-- 6. Вывести наименования всех учебных заведений и их расстояния 
--    (придумать/нагуглить/взять на глаз) до Киева.

select name, case city
               when 'Киев' then 0
			   when 'Львов' then 438
			   when 'Белая Церковь' then 123 
			   when 'Днепропетровск' then 563
			   when 'Донецк' then 894
			   when 'Запорожье' then 675
			   when 'Одесса' then 372
			   when 'Тернополь'then 468
			   when 'Херсон' then 697
			   when 'Харьков' then 379
		     end Distance
  from UNIVERSITIES 

  --или

select name, case city 
               when 'Киев' then '0'
			   else len(city)*128-len(name)*7
			 end distance
  from UNIVERSITIES

-- 7. Вывести все учебные заведения и их две последние цифры рейтинга.

select name, right (cast(RATING as varchar), 2) rating
  from UNIVERSITIES;

-- 8. Составьте запрос для таблицы UNIVERSITY таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    Код-1;КПИ-г.Киев;Рейтинг относительно ДНТУ(501) +756
--    ...
--    Код-11;КНУСА-г.Киев;рейтинг относительно ДНТУ(501) -18
--    ...
--    примечание: рейтинг вычислить относительно ДНТУшного, а также должен 
--    присутствовать знак (+/-), рейтинг ДНТУ заранее известен = 501

select 'Код'+'-'+cast(id as varchar)+';'+name+'-'+'г.'+city+';'+'рейтинг относительно ДНТУ(501)'+' '+
        case 
          when rating-501>0 then '+'
	      else ''
	    end + cast(rating-501 as varchar) 
  from UNIVERSITIES;

-- 9. Составьте запрос для таблицы UNIVERSITY таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    Код-1;КПИ-г.Киев;рейтинг состоит из 12 сотен
--    Код-2;КНУ-г.Киев;рейтинг состоит из 6 сотен
--    ...
--    примечание: в рейтинге необходимо указать кол-во сотен

select 'Код-'+cast(id as varchar)+';'+name+'-г.'+city+';рейтинг состоит из '+
       cast(floor(rating/100) as varchar)+' сотен' rating
  from UNIVERSITIES;
  
select concat('Код-',id,';',name,'-г.',city,';рейтинг состоит из ', floor(rating/100),' сотен') rating
  from UNIVERSITIES;